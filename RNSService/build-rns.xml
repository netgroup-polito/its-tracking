<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." name="service-build">
	<description>
		Script for REST Web Service Examples
	</description>
	
	<!-- Default service name property (overridden in
	the specific ant projects that import this one -->
	<property name="serviceName" value="rns" />
	
	<property name="root.location" location="." />
	<property name="src.dir" location="${root.location}/src" />
	<property name="path.prefix" value="it/polito/dp2/rest" />
	<property name="build.dir" location="${root.location}/build" />
	<property name="lib.dir" location="${root.location}/lib" />
	<property name="resources.dir" location="${root.location}/${serviceName}/WebContent" />
	<property name="web.lib.dir" location="${resources.dir}/WEB-INF/lib" />
	<property name="ext.lib.dir" location="/opt/dp2/shared/lib" />
	<property name="gen.dir" location="${root.location}/generated" />
	<property name="gen-tomcat-service.dir" location="${root.location}/target"/>
	<property name="gen-war.dir" location="${root.location}/war" />
	<property name="debug" value="true" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />
	<property name="testcase" value="0" />
	<property name="test.class" value="it.polito.dp2.rns.test.tests.RNSTests" />
	
	<import file="tomcat-build.xml"/>
	<import file="neo4j-build.xml"/>
	
	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${web.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ext.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<path id="test.classpath">
		<pathelement location="${build.dir}" />
		<fileset dir="${lib.dir}">
		    <include name="*.jar" />
		</fileset>
		<fileset dir="${ext.lib.dir}">
		    <include name="*.jar" />
			<exclude name="ant-*.jar"/>
		</fileset>
	</path>
	
	<target name="init" depends="clean">
		<!-- make directories -->
	    <mkdir dir="${build.dir}"/>
		<mkdir dir="${gen.dir}"/>
		<mkdir dir="${gen-tomcat-service.dir}"/>		
		<mkdir dir="${gen-war.dir}"/>
	</target>  
	
	<target name="build.service" depends="generate-bindings" description="Build the service">
		<javac debug="on" 
	       fork="true"
	       destdir="${build.dir}" 
	       srcdir="${src.dir};${gen.dir}"
		   includeantruntime="false"
		   source="${source}"
		   target="${target}"
	 	>
			<include name="${path.prefix}/${serviceName}/**/*.java"/>
			<classpath>
				<path refid="classpath" />
			</classpath>
		</javac>
	</target>
	
	<target name="package.service" depends="build.service" description="Package the service">
		<!-- copy web module resource files to temporary destination folder -->
    		<copy toDir="${gen-tomcat-service.dir}" overwrite="true">
	        	<fileset dir="${resources.dir}">
			</fileset>
      	</copy>
		<!-- copy class files to WEB-INF/classes directory -->
    		<copy toDir="${gen-tomcat-service.dir}/WEB-INF/classes" overwrite="true">
        		<fileset dir="${build.dir}"/>
      	</copy>
		<!-- copy lib files to WEB-INF/lib directory -->
    		<copy toDir="${gen-tomcat-service.dir}/WEB-INF/lib" overwrite="true">
	        	<fileset dir="${lib.dir}">
	        		<include name="*.jar"/>
	        		<include name="*.dylib"/>
			</fileset>
      	</copy> 
		<!-- make war archive -->
		<jar destfile="${gen-war.dir}/${serviceName}.war" basedir="${gen-tomcat-service.dir}"/>
	</target>

	
	<!--DELETE BUILD AND GENERATED DIRECTORIES-->
	<target name="clean" description="Clean build and generated">
		<delete dir="${build.dir}" />
		<delete dir="${gen.dir}" />
		<delete dir="${gen-tomcat-service.dir}"/>		
	</target>
	
	<target name="distclean" depends="clean" description="delete all">
		<delete dir="${gen-war.dir}" />
	</target>
	

	<!-- Target chk-bindings -->
	<target name="-chk-bindings">
		<uptodate property="generate-bindings.notRequired" targetfile="${gen.dir}/.flagfile">
			<srcfiles dir="/xsd" includes="**/*.xsd" />
		</uptodate>
	</target>

	<!-- Target generate-bindings -->
	<target name="generate-bindings" unless="generate-bindings.notRequired" depends="init,-chk-bindings" description="Generate bindings from schema">
		<exec executable="${env.JAVA_HOME}/bin/xjc" failonerror="true" >
			<arg value="-d" />
			<arg value="${gen.dir}" />
			<arg value="-p" />
			<arg value="it.polito.dp2.rest.rns.jaxb" />
			<arg value="${resources.dir}/WEB-INF/classes/xsd/RnsInfo.xsd" />
		</exec>
		<touch file="${gen.dir}/.flagfile" />
	</target>
	
	<target name="runFuncTest.real">	
			<echo>Running Junit tests...</echo>		
			<junit printsummary="yes" dir="." fork="yes" haltonfailure="no" showoutput="no" filtertrace="true" timeout="120000">
				<jvmarg value="-Djava.awt.headless=true" />
				<test haltonfailure="no" failureproperty="test_failed" name="${test.class}"/>
				<classpath>
					<path refid="test.classpath" />
				</classpath>
			</junit>
			<fail if="test_failed" status="500" message="*** Junit tests: Some Tests FAILED ***"/>
			<echo>*** Junit tests: All Tests PASSED  ***</echo>	
		</target>
</project>
