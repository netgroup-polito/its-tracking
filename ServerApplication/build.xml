<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="build" name="RNS-build">
	<description>
		Script for RNS
	</description>

	<property name="rns.location" location="." />
	<property name="src.dir" location="${rns.location}/src" />
	<property name="build.dir" location="${rns.location}/build" />
	<property name="lib.dir" location="${rns.location}/lib" />
	<property name="lib.src.dir" location="${rns.location}/lib-src"/>

	<property name="gen.dir" location="${rns.location}/gen" />
	<property name="schema.dir" location="${rns.location}/xsd" />
	<property name="rns.jar" value="RNS.jar" />
	<property name="service.name" value="RnsService" />
	
	<property name="debug" value="true" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />
	
	<property name="gen.tomcat.service.dir" location="${rns.location}/target"/>
	<property name="webContent.dir" location="${rns.location}/WebContent"/>
	<property name="gen.war.dir" location="${rns.location}/war" />

	<!-- The classpath to be used for compilation of the solution -->
	<path id="RNS.classpath">
		<pathelement location="${lib.dir}/RNS.jar" />
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
      	</fileset>
		<fileset dir="${lib.src.dir}">
			<include name="**/*.jar"/>
      	</fileset>
	</path>
	
	<!-- Target setseed: sets seed to time stamp if not yet set -->
	<target name="setseed" unless="seed">
		<tstamp>
			<format property="seed" pattern="1HHmmss" />
		</tstamp>
	</target>
	
	<!-- Target init -->
	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${gen.dir}" />
	</target>

	<!-- Target chk-bindings -->
	<target name="-chk-bindings">
		<uptodate property="generate-bindings.notRequired" targetfile="${gen.dir}/.flagfile">
			<srcfiles dir="${schema.dir}" includes="**/*.xsd" />
		</uptodate>
	</target>

	<!-- Target generate-bindings -->
	<target name="generate-bindings" unless="generate-bindings.notRequired" depends="init,-chk-bindings" description="Generate bindings from schema">
		<exec executable="xjc" failonerror="true" >
			<arg value="-d" />
			<arg value="${gen.dir}" />
			<arg value="-p" />
			<arg value="it.polito.RNS.jaxb" />
			<arg value="${schema.dir}/rnsInfo.xsd" />
		</exec>
		<touch file="${gen.dir}/.flagfile" />
	</target>

	<!-- Target clean -->
	<target name="clean" description="Clean all">
		<delete dir="${build.dir}" />
		<delete includeemptydirs="true">
		  <fileset dir="${gen.dir}" includes="**/*" defaultexcludes="false"/>
		</delete>
		<delete includeemptydirs="true">
		    <fileset dir="${rns.location}" includes="temp*/**" defaultexcludes="false"/>
		</delete>
		<delete file="${rns.location}/war/${service.name}.war"/>
		
		<delete file="${rns.location}/rns.zip"/>
	</target>

	<!-- Target build -->
	<target name="build" depends="init, generate-bindings" description="Build the application">
		<echo>Building the application (if needed)...</echo>
		<javac 
			destdir="${build.dir}"
			debug="${debug}"
			debuglevel="${debuglevel}"
			source="${source}"
			target="${target}"
			includeantruntime="false">
				<src path="${src.dir}"/>
				<src path="${gen.dir}"/>
				<include name="it/polito/RNS/**" />
				<classpath>
					<path refid="RNS.classpath" />
				</classpath>
		</javac>
		<echo>Done.</echo>
	</target>

	<target name="buildRnsInfo" description="Build the sample application">
		<echo>Building RnsInfo (if needed)...</echo>
		<mkdir dir="${build.dir}" />
		<javac 
			destdir="${build.dir}"
			debug="${debug}"
			debuglevel="${debuglevel}"
			source="${source}"
			target="${target}"
			includeantruntime="false">
				<src path="${src.dir}" />
				<include name="it/polito/RNS/RnsInfo.java" />
				<classpath>
					<path refid="RNS.classpath" />
				</classpath>
		</javac>
		<echo>Done.</echo>
	</target>

	<!-- Build WAR file target -->
	<target name="package-service" depends="build">
		<!-- copy web module resource files to temporary destination folder -->
    	<copy toDir="${gen.tomcat.service.dir}" overwrite="true">
        	<fileset dir="${webContent.dir}">
			</fileset>
      	</copy>
		<!-- copy class files to WEB-INF/classes directory -->
    	<copy toDir="${gen.tomcat.service.dir}/WEB-INF/classes" overwrite="true">
        	<fileset dir="${build.dir}">
    	</fileset>
    		
      	</copy>
		<!-- copy lib files to WEB-INF/lib directory -->
    	<copy toDir="${gen.tomcat.service.dir}/WEB-INF/lib" overwrite="true">
        	<fileset dir="${lib.dir}">
        		<include name="*.jar"/>
        		<exclude name="rns.jar"/>
			</fileset>
      	</copy> 
		<!-- make war archive -->
		<jar destfile="${gen.war.dir}/${service.name}.war" basedir="${gen.tomcat.service.dir}"/>
		<echo>package service done</echo>
	</target>
</project>
